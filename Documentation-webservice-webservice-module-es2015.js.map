{"version":3,"sources":["webpack:///./src/app/Documentation/webservice/child-components/connection-string/connection-string.component.html","webpack:///./src/app/Documentation/webservice/child-components/controllers/controllers.component.html","webpack:///./src/app/Documentation/webservice/child-components/getting-started/getting-started.component.html","webpack:///./src/app/Documentation/webservice/child-components/helpers/helpers.component.html","webpack:///./src/app/Documentation/webservice/child-components/introduction/introduction.component.html","webpack:///./src/app/Documentation/webservice/child-components/models/models.component.html","webpack:///./src/app/Documentation/webservice/child-components/new-table/new-table.component.html","webpack:///./src/app/Documentation/webservice/child-components/publish/publish.component.html","webpack:///./src/app/Documentation/webservice/child-components/sending-emails/sending-emails.component.html","webpack:///./src/app/Documentation/webservice/child-components/test-debug/test-debug.component.html","webpack:///./src/app/Documentation/webservice/webservice.component.html","webpack:///./src/app/Documentation/webservice/child-components/connection-string/connection-string.component.css","webpack:///./src/app/Documentation/webservice/child-components/connection-string/connection-string.component.ts","webpack:///./src/app/Documentation/webservice/child-components/controllers/controllers.component.css","webpack:///./src/app/Documentation/webservice/child-components/controllers/controllers.component.ts","webpack:///./src/app/Documentation/webservice/child-components/getting-started/getting-started.component.css","webpack:///./src/app/Documentation/webservice/child-components/getting-started/getting-started.component.ts","webpack:///./src/app/Documentation/webservice/child-components/helpers/helpers.component.css","webpack:///./src/app/Documentation/webservice/child-components/helpers/helpers.component.ts","webpack:///./src/app/Documentation/webservice/child-components/introduction/introduction.component.css","webpack:///./src/app/Documentation/webservice/child-components/introduction/introduction.component.ts","webpack:///./src/app/Documentation/webservice/child-components/models/models.component.css","webpack:///./src/app/Documentation/webservice/child-components/models/models.component.ts","webpack:///./src/app/Documentation/webservice/child-components/new-table/new-table.component.css","webpack:///./src/app/Documentation/webservice/child-components/new-table/new-table.component.ts","webpack:///./src/app/Documentation/webservice/child-components/publish/publish.component.css","webpack:///./src/app/Documentation/webservice/child-components/publish/publish.component.ts","webpack:///./src/app/Documentation/webservice/child-components/sending-emails/sending-emails.component.css","webpack:///./src/app/Documentation/webservice/child-components/sending-emails/sending-emails.component.ts","webpack:///./src/app/Documentation/webservice/child-components/test-debug/test-debug.component.css","webpack:///./src/app/Documentation/webservice/child-components/test-debug/test-debug.component.ts","webpack:///./src/app/Documentation/webservice/webservice-routing.module.ts","webpack:///./src/app/Documentation/webservice/webservice.component.css","webpack:///./src/app/Documentation/webservice/webservice.component.ts","webpack:///./src/app/Documentation/webservice/webservice.module.ts"],"names":[],"mappings":"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","file":"Documentation-webservice-webservice-module-es2015.js","sourcesContent":["module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Connection String</mat-card-title>\\n        <mat-card-subtitle></mat-card-subtitle>\\n    </mat-card-header>\\n</mat-card>\\n\\n<app-docs-card [items]=\\\"items\\\"></app-docs-card>\"","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Controllers</mat-card-title>\\n        <mat-card-subtitle></mat-card-subtitle>\\n    </mat-card-header>\\n</mat-card>\\n\\n<app-docs-card [items]=\\\"items\\\"></app-docs-card>\\n\\n<app-tab-group [contents]=\\\"getContent()\\\">Hej</app-tab-group>\\n\\n\"","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Getting started with the Webservice</mat-card-title>\\n        <mat-card-subtitle>How to get started with the Webservice</mat-card-subtitle>\\n    </mat-card-header>\\n</mat-card>\\n\\n<app-docs-card [items]=\\\"items\\\"></app-docs-card>\"","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Helpers</mat-card-title>\\n        <mat-card-subtitle></mat-card-subtitle>\\n    </mat-card-header>\\n</mat-card>\\n\\n<app-docs-card [items]=\\\"items\\\"></app-docs-card>\\n\\n<app-tab-group [contents]=\\\"getContent()\\\">Hej</app-tab-group>\\n\\n\"","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Introduction</mat-card-title>\\n        <mat-card-subtitle></mat-card-subtitle>\\n    </mat-card-header>\\n</mat-card>\\n\\n<app-docs-card [items]=\\\"items\\\"></app-docs-card>\"","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Models</mat-card-title>\\n        <mat-card-subtitle></mat-card-subtitle>\\n    </mat-card-header>\\n</mat-card>\\n\\n<app-docs-card [items]=\\\"items\\\"></app-docs-card>\"","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>New Table</mat-card-title>\\n        <mat-card-subtitle></mat-card-subtitle>\\n    </mat-card-header>\\n</mat-card>\\n\\n<app-docs-card [items]=\\\"items\\\"></app-docs-card>\"","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Publish</mat-card-title>\\n        <mat-card-subtitle></mat-card-subtitle>\\n    </mat-card-header>\\n</mat-card>\\n\\n<app-docs-card [items]=\\\"items\\\"></app-docs-card>\"","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Sending Emails</mat-card-title>\\n        <mat-card-subtitle></mat-card-subtitle>\\n    </mat-card-header>\\n</mat-card>\\n\\n<app-docs-card [items]=\\\"items\\\"></app-docs-card>\"","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>Test and Debug</mat-card-title>\\n        <mat-card-subtitle></mat-card-subtitle>\\n    </mat-card-header>\\n</mat-card>\\n\\n<app-docs-card [items]=\\\"items\\\"></app-docs-card>\"","module.exports = \"<p>WS works!</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RvY3VtZW50YXRpb24vd2Vic2VydmljZS9jaGlsZC1jb21wb25lbnRzL2Nvbm5lY3Rpb24tc3RyaW5nL2Nvbm5lY3Rpb24tc3RyaW5nLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CardItem } from '../../../interfaces/card-item';\n\n@Component({\n  selector: 'app-connection-string',\n  templateUrl: './connection-string.component.html',\n  styleUrls: ['./connection-string.component.css']\n})\nexport class ConnectionStringComponent implements OnInit {\n\n  items = [\n    {\n      title: 'The ConnectionString class',\n      subtitle: 'Switching between databases',\n      headerStyle: 'bg-info text-white',\n      content: `\n      <p>The database currently in use by the WS is assigned to the string property 'Value' in ConnectionString.cs.</p>\n      <p>Setting it to Test will target our testDB, and Production will target our productionDB.</p>\n      <p><b>!Always!</b> remember to check that you have the correct value set before publishing the WS to Azure, as getting \n      things mixed up can temporarily disable all of our customers apps.</p>\n      `\n    },\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RvY3VtZW50YXRpb24vd2Vic2VydmljZS9jaGlsZC1jb21wb25lbnRzL2NvbnRyb2xsZXJzL2NvbnRyb2xsZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CardItem } from '../../../interfaces/card-item';\n\n@Component({\n  selector: 'app-controllers',\n  templateUrl: './controllers.component.html',\n  styleUrls: ['./controllers.component.css']\n})\nexport class ControllersComponent implements OnInit {\n\n\n\n  GettingStartedContent = [\n    {\n      tabtitle: 'NewAppController',\n      intro: '',\n      list: [\n          {content: 'This controller contains an extra method \"ListUsers\".'},\n          {content: `It is used by our admin section of the control panel,\n           to delete users from both FireBase and the App table in the database..`}\n        ],\n      icon: 'check_circle'\n    },\n    {\n      tabtitle: 'EmailController',\n      intro: '',\n      list: [\n          {content: 'This controller is responsible for sending emails via office365s Smtp ' +\n          'server from a static email set as the fromAddress.'},\n          {content: `It is used by sending a post request to api/email/send/some@email.com\n           with an object containing a 'subject' and 'value'`}\n        ],\n      icon: 'check_circle'\n    }\n  ];\n\n  items = [\n    {\n      title: 'Controllers',\n      subtitle: '',\n      headerStyle: 'bg-info text-white',\n      content: `\n      <p>The controllers are the classes containing the methods responsible for communicating with the database.</p>\n      <p>They typically contain a selection of GET methods, named after the query they execute, as \n      well as Post, Put and Delete methods where needed.</p>\n      <p>To allow easy creation of similar controllers, we make use of the methods in the ControllerHelper class.</p>\n      <p>To create a new controller: </p>\n\n      <ol>\n      <li>Copy and paste ControllerTemplate.cs</li>\n      <li>Rename the file and the class name.</li>\n      <li>Uncomment the desired methods, putting in the correct SQL queries and adjusting names and types.</li>\n      <li>Create and run Unit Tests for your new controller in the WebServiceTests project.</li>\n      <li><a href=\"webservice/publish\">Publish your changes.</a></li>\n\n      </ol>\n      `\n    },\n  ];\n\n  constructor() { }\n\n  getContent() {\n    return this.GettingStartedContent;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RvY3VtZW50YXRpb24vd2Vic2VydmljZS9jaGlsZC1jb21wb25lbnRzL2dldHRpbmctc3RhcnRlZC9nZXR0aW5nLXN0YXJ0ZWQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CardItem } from '../../../interfaces/card-item';\n\n@Component({\n  selector: 'app-getting-started',\n  templateUrl: './getting-started.component.html',\n  styleUrls: ['./getting-started.component.css']\n})\nexport class GettingStartedComponent implements OnInit {\n\n  items: CardItem[] = [\n    {\n      title: 'Info',\n      subtitle: 'How do we use REST API',\n      headerStyle: 'bg-info text-white',\n      content: `\n      <p>The HAppWebService is a REST Webservice in C# for MSSQL, developed and maintained using Microsoft Visual Studio 2017.</p>\n      <p>Its purpose is sending to, and recieving from, the database currently in use by the various platforms.</p>\n      <p>Both the Webservice and the Database are hosted on Azure.</p>\n      <p>The testing WS can be found on <a href=\"http://heroappwebservicetest.azurewebsites.net/api/newapp\">\n      http://heroappwebservicetest.azurewebsites.net/api/newapp</a></p>\n      <p>The production WS can be found on <a href=\"http://heroappwebserviceproduction.azurewebsites.net/api/newapp\">\n      http://heroappwebserviceproduction.azurewebsites.net/api/newapp</a></p>\n      <p>It is important that you understand the function of the ConnectionString class before making changes to the Webservice.</p>\n      `\n    },\n    {\n      title: 'Contents',\n      subtitle: 'The contents of this page.',\n      headerStyle: 'bg-info text-white',\n      content: `\n      <ol>\n      <li><a href=\"webservice/introduction\">Introduction</a></li>\n      <li><a href=\"webservice/connection-string\">Connection String</a></li>\n\n      <li><a href=\"webservice/helpers\">Helpers</a>\n            <ul>\n              <li>ControllerHelper</li>\n              <li>HashGenerator</li>\n              <li>StatusCodeHelper</li>\n            </ul>\n      </li>\n\n      <li><a href=\"webservice/models\">Models</a></li>\n\n      <li><a href=\"webservice/controllers\">Controllers</a>\n            <ul>\n              <li>Controllers</li>\n              <li>NewAppController</li>\n              <li>EmailController</li>\n            </ul>\n      </li>\n\n      <li><a href=\"webservice/sending-emails\">Sending Emails</a></li>\n\n      <li><a href=\"webservice/new-table\">Creating & using a new database table</a></li>\n\n      <li><a href=\"webservice/test-debug\">Testing & Debugging</a></li>\n\n      <li><a href=\"webservice/publish\">Publishing the new changes</a></li>\n\n      </ol>\n      `\n    },\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RvY3VtZW50YXRpb24vd2Vic2VydmljZS9jaGlsZC1jb21wb25lbnRzL2hlbHBlcnMvaGVscGVycy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { CardItem } from '../../../interfaces/card-item';\n\n@Component({\n  selector: 'app-helpers',\n  templateUrl: './helpers.component.html',\n  styleUrls: ['./helpers.component.css']\n})\nexport class HelpersComponent implements OnInit {\n\n\n\n  GettingStartedContent = [\n    {\n      tabtitle: 'ControllerHelper',\n      intro: 'The purpose of this class is to provide easy-to-use methods for creating new controllers without repeating code.',\n      list: [\n          {content: 'It contains generic methods for GET, POST, PUT and DELETE and ' +\n          'is used in every controller associated with a DB table.'},\n        ],\n      icon: 'check_circle'\n    },\n    {\n      tabtitle: 'HashGenerator',\n      intro: '<p>The purpose of this class is to generate unique App IDs for our customers. </p>',\n      list: [\n          {content: `\n          <p>This is done by hashing a string with SHA256 and removing all characters, except 9 numbers.</p>\n          <p>To make sure the IDs are still unique, the value is compared \n          to all appIds in the DB, and changed if there is a duplicate. </p>\n          <p>It contains 2 methods, CalculateHash and GetHashInt </p>`},\n        ],\n      icon: 'check_circle'\n    },\n    {\n      tabtitle: 'StatusCodeHelper',\n      intro: 'The purpose of this class is to make appropriate status codes used by the methods in ControllerHelper. \\n' +\n      'It contains 2 methods. ',\n      list: [\n          {content: `<p>HandleSuccess, which returns NotFound if the SQL Query returns 0 rows affected \n          or OK if the request is successful.</p>\n          <p>HandleError, which returns a variety of status codes based on the contents of the exception passed to the method.</p>`},\n        ],\n      icon: 'check_circle'\n    },\n  ];\n\n  items = [\n    {\n      title: 'Helpers',\n      subtitle: '',\n      headerStyle: 'bg-info text-white',\n      content: ` \n      <p>The helper classes contain methods used by the controllers.</p>\n      `\n    },\n  ];\n\n  constructor() { }\n\n  getContent() {\n    return this.GettingStartedContent;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RvY3VtZW50YXRpb24vd2Vic2VydmljZS9jaGlsZC1jb21wb25lbnRzL2ludHJvZHVjdGlvbi9pbnRyb2R1Y3Rpb24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CardItem } from '../../../interfaces/card-item';\n\n@Component({\n  selector: 'app-introduction',\n  templateUrl: './introduction.component.html',\n  styleUrls: ['./introduction.component.css']\n})\nexport class IntroductionComponent implements OnInit {\n\n  items = [\n    {\n      title: 'Information regarding the Webservice',\n      subtitle: '',\n      headerStyle: 'bg-info text-white',\n      content: `\n      <p>The HAppWebService is an AspNetCore project for handling data transfer to the database, \n      as well as <a href=\"webservice/sending-emails\">sending emails.</a></p>\n      <p>To try it out, go to <a href=\"http://heroappwebservicetest.azurewebsites.net/api/newapp\">\n      http://heroappwebservicetest.azurewebsites.net/api/newapp</a> to see the \n      current apps on our testDB.</p>\n      <p>For GET methods, it returns either arrays of objects or single objects, depending on the individual method.</p>\n      <p>For POST, PUT and DELETE methods, it returns a HTTPStatusCode depending on the result of your query.</p>\n      <p>Trying out or debugging new changes is done by creating new Unit Tests, or by compiling the project yourself \n      and sending requests to localhost with a tool like Postman and Fiddler.</p>\n      <p>This is further described in <a href=\"webservice/test-debug\">Testing & Debugging</a></p>\n      `\n    }\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RvY3VtZW50YXRpb24vd2Vic2VydmljZS9jaGlsZC1jb21wb25lbnRzL21vZGVscy9tb2RlbHMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CardItem } from '../../../interfaces/card-item';\n\n@Component({\n  selector: 'app-models',\n  templateUrl: './models.component.html',\n  styleUrls: ['./models.component.css']\n})\nexport class ModelsComponent implements OnInit {\n\n  items = [\n    {\n      title: 'Models',\n      subtitle: '',\n      headerStyle: 'bg-info text-white',\n      content: `\n      <p>We communicate objects with the different platforms in JSON, modeled after the classes in this folder. </p>\n      <p>They are simple C# classes with data types corresponding to types in MSSQL, as well as a constructor for use in unit tests.</p>\n      <p>If additional tables are created in the database, new model classes and controllers also need to be created.</p>\n      <p>If additional columns are created in a table in the database, the model class and controller has to be adjusted accordingly.</p>\n      `\n    }\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RvY3VtZW50YXRpb24vd2Vic2VydmljZS9jaGlsZC1jb21wb25lbnRzL25ldy10YWJsZS9uZXctdGFibGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CardItem } from '../../../interfaces/card-item';\n\n@Component({\n  selector: 'app-new-table',\n  templateUrl: './new-table.component.html',\n  styleUrls: ['./new-table.component.css']\n})\nexport class NewTableComponent implements OnInit {\n\n  items = [\n    {\n      title: 'Creating & using a new database table',\n      subtitle: '',\n      headerStyle: 'bg-info text-white',\n      content: `\n      <p>To allow new types of data to be stored, you can create a new table in the database.\n      To create and use a new table</p>\n      <ol>\n        <li> Make sure your query contains an 'id int IDENTITY(1,1) PRIMARY KEY' field.</li>\n          <li> </p>Execute the query to create the table in the database</p>\n          <p> Example Query: </p>\n          <pre>CREATE TABLE MenuList (\n            id int IDENTITY(1,1) PRIMARY KEY,\n            appId int NOT NULL,\n            targetPageId int NOT NULL,\n            title varchar(50) NOT NULL\n        );</pre>\n        </li>\n          <li> <b>Important!</b> Make sure the correct value is input in ConnectionString.cs</li>\n          <li> Make a model class with the correct data types and a parameterized constructor</li>\n          <li> Make a <a href=\"webservice/controllers\">controller</a> in order to access the table from other platforms.</li>\n          <li> Make <a href=\"webservice/test-debug\">unit tests</a> in WebServiceTests, execute and make sure they pass.</li>\n      </ol>\n        `\n    }\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RvY3VtZW50YXRpb24vd2Vic2VydmljZS9jaGlsZC1jb21wb25lbnRzL3B1Ymxpc2gvcHVibGlzaC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { CardItem } from '../../../interfaces/card-item';\n\n@Component({\n  selector: 'app-publish',\n  templateUrl: './publish.component.html',\n  styleUrls: ['./publish.component.css']\n})\nexport class PublishComponent implements OnInit {\n\n  items = [\n    {\n      title: 'Publishing new changes',\n      subtitle: '',\n      headerStyle: 'bg-info text-white',\n      content: `\n      <p>The project has publish settings associated which you can use by right-clicking the project and selecting publish.</p>\n      <p>Make sure you publish to the correct url matching the value of ConnectionString.cs</p>\n      <p>A better guide to publishing will come</p>\n      `\n    }\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RvY3VtZW50YXRpb24vd2Vic2VydmljZS9jaGlsZC1jb21wb25lbnRzL3NlbmRpbmctZW1haWxzL3NlbmRpbmctZW1haWxzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CardItem } from '../../../interfaces/card-item';\n\n@Component({\n  selector: 'app-sending-emails',\n  templateUrl: './sending-emails.component.html',\n  styleUrls: ['./sending-emails.component.css']\n})\nexport class SendingEmailsComponent implements OnInit {\n\n  items = [\n    {\n      title: 'Information regarding emails',\n      subtitle: '',\n      headerStyle: 'bg-info text-white',\n      content: `\n      <p>Our EmailController allows sending of emails.</p>\n      <p>It is used by our dashboard when either a http request fails, or a customer wants to publish their app.</p>\n      <p>To use it, send a post request to api/email/send/some@email.com\n      with an object containing a 'subject' and 'value'</p>\n      <p>Currently, sender and formatting is set inside EmailController.cs</p>\n      `\n    }\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RvY3VtZW50YXRpb24vd2Vic2VydmljZS9jaGlsZC1jb21wb25lbnRzL3Rlc3QtZGVidWcvdGVzdC1kZWJ1Zy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { CardItem } from '../../../interfaces/card-item';\n\n@Component({\n  selector: 'app-test-debug',\n  templateUrl: './test-debug.component.html',\n  styleUrls: ['./test-debug.component.css']\n})\nexport class TestDebugComponent implements OnInit {\n\n  items = [\n    {\n      title: 'Testing & Debugging',\n      subtitle: '',\n      headerStyle: 'bg-info text-white',\n      content: `\n      <p>In order to make sure the controllers work as intended, remember to create appropriate Unit Tests.</p>\n      <p>Before publishing the Webservice to Azure, make sure all the tests pass.</p>\n      <p>Unit Tests are found inside the TestClasses folder in the WebServiceTests project.</p>\n      <p>For testing basic CRUD operations, simply copy and paste an existing Unit Test and adjust objects and method calls where need.</p>\n\n      <p>If a Unit Test fails, click the link below Stacktrace to locate the source of the failure.</p>\n      <img src=\"https://firebasestorage.googleapis.com/v0/b/androideventapp-146a1.appspot.com/o/test-debug.PNG?alt=media&token=c76f238b-317f-42f6-ba1a-a12c75f1a8a3\">\n      `\n    }\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WebServiceComponent } from './webservice.component';\nimport { NavigationComponent } from './child-components/navigation/navigation.component';\nimport { GettingStartedComponent } from './child-components/getting-started/getting-started.component';\nimport { IntroductionComponent } from './child-components/introduction/introduction.component';\nimport { HelpersComponent } from './child-components/helpers/helpers.component';\nimport { ControllersComponent } from './child-components/controllers/controllers.component';\nimport { ConnectionStringComponent } from './child-components/connection-string/connection-string.component';\nimport { ModelsComponent } from './child-components/models/models.component';\nimport { SendingEmailsComponent } from './child-components/sending-emails/sending-emails.component';\nimport { NewTableComponent } from './child-components/new-table/new-table.component';\nimport { PublishComponent } from './child-components/publish/publish.component';\nimport { TestDebugComponent } from './child-components/test-debug/test-debug.component';\n\n\nconst routes: Routes = [\n    {path: 'introduction', component: IntroductionComponent},\n    {path: 'helpers', component: HelpersComponent},\n    {path: 'connection-string', component: ConnectionStringComponent},\n    {path: 'models', component: ModelsComponent},\n    {path: 'sending-emails', component: SendingEmailsComponent},\n    {path: 'new-table', component: NewTableComponent},\n    {path: 'publish', component: PublishComponent},\n    {path: 'test-debug', component: TestDebugComponent},\n    {path: 'controllers', component: ControllersComponent},\n    {path: 'getting-started', component: GettingStartedComponent}\n  ];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WebServiceRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RvY3VtZW50YXRpb24vd2Vic2VydmljZS93ZWJzZXJ2aWNlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-webservice',\n  templateUrl: './webservice.component.html',\n  styleUrls: ['./webservice.component.css']\n})\nexport class WebServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WebServiceRoutingModule } from './webservice-routing.module';\nimport { WebServiceComponent } from './webservice.component';\nimport { NavigationComponent } from './child-components/navigation/navigation.component';\nimport { GettingStartedComponent } from './child-components/getting-started/getting-started.component';\nimport { MatCardModule, MatTabsModule } from '@angular/material';\nimport { DocsCardComponent } from '../shared/docs-card/docs-card.component';\nimport { IntroductionComponent } from './child-components/introduction/introduction.component';\nimport { HelpersComponent } from './child-components/helpers/helpers.component';\nimport { TabGroupComponent } from '../shared/tab-group/tab-group.component';\nimport { TabGroupModule } from '../shared/tab-group/tab-group.module';\nimport { DocsCardModule } from '../shared/docs-card/docs-card.module';\nimport { ControllersComponent } from './child-components/controllers/controllers.component';\nimport { ModelsComponent } from './child-components/models/models.component';\nimport { TestDebugComponent } from './child-components/test-debug/test-debug.component';\nimport { NewTableComponent } from './child-components/new-table/new-table.component';\nimport { SendingEmailsComponent } from './child-components/sending-emails/sending-emails.component';\nimport { PublishComponent } from './child-components/publish/publish.component';\nimport { ConnectionStringComponent } from './child-components/connection-string/connection-string.component';\n\n\n@NgModule({\n  declarations: [WebServiceComponent, IntroductionComponent, HelpersComponent, ControllersComponent, GettingStartedComponent,\n  ModelsComponent, TestDebugComponent, NewTableComponent, SendingEmailsComponent, PublishComponent, ConnectionStringComponent],\n  imports: [\n    CommonModule,\n    WebServiceRoutingModule,\n    MatCardModule,\n    MatTabsModule,\n    TabGroupModule,\n    DocsCardModule\n  ]\n})\nexport class WebServiceModule { }\n"],"sourceRoot":""}