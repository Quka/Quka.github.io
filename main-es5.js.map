{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/app/layouts/full/full.component.html","webpack:///./src/app/layouts/full/header/header.component.html","webpack:///./src/app/layouts/full/sidebar/sidebar.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/demo-material-module.ts","webpack:///./src/app/layouts/full/full.component.ts","webpack:///./src/app/layouts/full/header/header.component.ts","webpack:///./src/app/layouts/full/sidebar/sidebar.component.ts","webpack:///./src/app/shared/accordion/accordion.directive.ts","webpack:///./src/app/shared/accordion/accordionanchor.directive.ts","webpack:///./src/app/shared/accordion/accordionlink.directive.ts","webpack:///./src/app/shared/accordion/index.ts","webpack:///./src/app/shared/menu-items/menu-items.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/spinner.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["module.exports = \"<!-- ============================================================== -->\\r\\n<!-- Main wrapper - style you can find in pages.scss -->\\r\\n<!-- ============================================================== -->\\r\\n<!-- ============================================================== -->\\r\\n<!-- Main wrapper - style you can find in pages.scss -->\\r\\n<!-- ============================================================== -->\\r\\n<div class=\\\"main-container\\\" [dir]=\\\"dir\\\" [ngClass]=\\\"{'minisidebar': minisidebar, 'boxed': boxed, 'danger': danger, 'blue': blue, 'green': green, 'dark': dark }\\\">\\r\\n    <!-- ============================================================== -->\\r\\n    <!-- Topbar - style you can find in header.scss -->\\r\\n    <!-- ============================================================== -->\\r\\n    <mat-toolbar color=\\\"primary\\\" class=\\\"topbar telative\\\">\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Logo - style you can find in header.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <a class=\\\"navbar-brand\\\" href=\\\"/\\\">\\r\\n                <!-- Logo icon -->\\r\\n                <b>\\r\\n                    <!--You can put here icon as well // <i class=\\\"wi wi-sunset\\\"></i> //-->\\r\\n                    <!-- Dark Logo icon -->\\r\\n                    <img src=\\\"assets/images/hero/logo-white.png\\\" alt=\\\"homepage\\\" class=\\\"dark-logo\\\">\\r\\n                    <!-- Light Logo icon -->\\r\\n                    <img src=\\\"assets/images/hero/logo-white.png\\\" alt=\\\"homepage\\\" class=\\\"light-logo\\\">\\r\\n                </b>\\r\\n                <!--End Logo icon -->\\r\\n            </a>\\r\\n        </div>\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- sidebar toggle -->\\r\\n        <!-- ============================================================== -->\\r\\n\\r\\n        <button mat-icon-button (click)=\\\"snav.toggle()\\\" value=\\\"sidebarclosed\\\">\\r\\n            <mat-icon>menu</mat-icon>\\r\\n        </button>\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Search - style you can find in header.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        <button mat-icon-button class=\\\"srh-btn\\\">\\r\\n            <mat-icon>search</mat-icon>\\r\\n        </button>\\r\\n        <form class=\\\"app-search\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search &amp; enter\\\">\\r\\n            <a class=\\\"cl-srh-btn\\\">\\r\\n                <i class=\\\"ti-close\\\"></i>\\r\\n            </a>\\r\\n        </form>\\r\\n        <span fxFlex></span>\\r\\n        <button (click)=\\\"end.toggle()\\\" mat-icon-button class=\\\"ml-xs overflow-visible\\\">\\r\\n            <mat-icon>settings</mat-icon>\\r\\n        </button>\\r\\n    </mat-toolbar>\\r\\n    <!-- ============================================================== -->\\r\\n    <!-- End Topbar - style you can find in pages.scss -->\\r\\n    <!-- ============================================================== -->\\r\\n    <mat-sidenav-container class=\\\"example-sidenav-container\\\" [style.marginTop.px]=\\\"mobileQuery.matches ? 0 : 0\\\"\\r\\n        [ngClass]=\\\"{'minisidebar': minisidebar}\\\">\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Sidebar - style you can find in sidebar.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        <mat-sidenav #snav id=\\\"snav\\\" class=\\\"pl-xs\\\" [mode]=\\\"mobileQuery.matches ? 'side' : 'over'\\\" fixedTopGap=\\\"0\\\"\\r\\n            [opened]=\\\"mobileQuery.matches\\\" [disableClose]=\\\"mobileQuery.matches\\\" (open)=\\\"sidebarOpened = true\\\" (close)=\\\"sidebarOpened = false\\\"\\r\\n            [perfectScrollbar]=\\\"config\\\">\\r\\n\\r\\n            <app-sidebar class=\\\"app-sidebar\\\"></app-sidebar>\\r\\n\\r\\n        </mat-sidenav>\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Sidebar - style you can find in sidebar.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Right Sidebar - style you can find in rightsidebar.component.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        <mat-sidenav #end position=\\\"end\\\" class=\\\"chat-panel\\\" mode=\\\"over\\\" opened=\\\"false\\\">\\r\\n            <div class=\\\"scroll\\\">\\r\\n                <mat-nav-list>\\r\\n\\r\\n                    <h3 mat-subheader class=\\\"text-uppercase font-weight-bold\\\">Settings</h3>\\r\\n                    <mat-list-item>\\r\\n                        <mat-slide-toggle color=\\\"warn\\\" (change)=\\\"dir = (dir == 'rtl' ? 'ltr' : 'rtl')\\\">RTL</mat-slide-toggle>\\r\\n                    </mat-list-item>\\r\\n                    <mat-list-item>\\r\\n                        <mat-slide-toggle color=\\\"warn\\\" [(ngModel)]=\\\"boxed\\\">Boxed Layout</mat-slide-toggle>\\r\\n                    </mat-list-item>\\r\\n                    <!--<mat-list-item>\\r\\n                    <mat-slide-toggle [(ngModel)]=\\\"minisidebar\\\">Mini Sidebar</mat-slide-toggle>\\r\\n                  </mat-list-item>    -->\\r\\n                    <mat-divider></mat-divider>\\r\\n                    <h3 mat-subheader class=\\\"text-uppercase font-weight-bold\\\">Colors</h3>\\r\\n                    <mat-list-item>\\r\\n                        <mat-checkbox color=\\\"warn\\\" [(ngModel)]=\\\"danger\\\" (change)=\\\"green = blue = false\\\" class=\\\"text-danger\\\">Red</mat-checkbox>\\r\\n                    </mat-list-item>\\r\\n                    <mat-list-item>\\r\\n                        <mat-checkbox color=\\\"warn\\\" [(ngModel)]=\\\"green\\\" (change)=\\\"danger = blue = false\\\" class=\\\"text-megna\\\">Teal\\r\\n                            Green</mat-checkbox>\\r\\n                    </mat-list-item>\\r\\n                    <mat-list-item>\\r\\n                        <mat-checkbox color=\\\"warn\\\" [(ngModel)]=\\\"blue\\\" (change)=\\\"green = danger = false\\\" class=\\\"text-info\\\">Blue</mat-checkbox>\\r\\n                    </mat-list-item>\\r\\n                    <mat-list-item>\\r\\n                        <mat-checkbox color=\\\"warn\\\" [(ngModel)]=\\\"dark\\\" (change)=\\\"green = blue = danger = false\\\">Dark</mat-checkbox>\\r\\n                    </mat-list-item>\\r\\n                </mat-nav-list>\\r\\n            </div>\\r\\n        </mat-sidenav>\\r\\n\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Page container - style you can find in pages.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        <mat-sidenav-content class=\\\"page-wrapper\\\">\\r\\n            \\r\\n                <div class=\\\"page-content\\\">\\r\\n\\r\\n                    <router-outlet>\\r\\n                        <app-spinner></app-spinner>\\r\\n                    </router-outlet>\\r\\n\\r\\n                </div>\\r\\n            \\r\\n        </mat-sidenav-content>\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Page container - style you can find in pages.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n    </mat-sidenav-container>\\r\\n</div>\"","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- Main wrapper - style you can find in pages.scss -->\\r\\n<!-- ============================================================== -->\\r\\n<div class=\\\"main-container\\\" [dir]=\\\"dir\\\" [ngClass]=\\\"{'minisidebar': minisidebar, 'boxed': boxed, 'danger': danger, 'blue': blue, 'green': green, 'dark': dark }\\\">\\r\\n    <!-- ============================================================== -->\\r\\n    <!-- Topbar - style you can find in header.scss -->\\r\\n    <!-- ============================================================== -->\\r\\n    <mat-toolbar color=\\\"primary\\\" class=\\\"topbar telative\\\">\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Logo - style you can find in header.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <a class=\\\"navbar-brand\\\" href=\\\"/\\\">\\r\\n                <!-- Logo icon -->\\r\\n                <b>\\r\\n                    <!--You can put here icon as well // <i class=\\\"wi wi-sunset\\\"></i> //-->\\r\\n                    <!-- Dark Logo icon -->\\r\\n                    <img src=\\\"assets/images/logo-icon.png\\\" alt=\\\"homepage\\\" class=\\\"dark-logo\\\">\\r\\n                    <!-- Light Logo icon -->\\r\\n                    <img src=\\\"assets/images/logo-light-icon.png\\\" alt=\\\"homepage\\\" class=\\\"light-logo\\\">\\r\\n                </b>\\r\\n                <!--End Logo icon -->\\r\\n                <!-- Logo text -->\\r\\n                <span fxShow=\\\"false\\\" fxShow.gt-xs>\\r\\n                    <!-- dark Logo text -->\\r\\n                    <img src=\\\"assets/images/logo-text.png\\\" alt=\\\"homepage\\\" class=\\\"dark-logo\\\">\\r\\n                    <!-- Light Logo text -->\\r\\n                    <img src=\\\"assets/images/logo-light-text.png\\\" class=\\\"light-logo\\\" alt=\\\"homepage\\\">\\r\\n                </span>\\r\\n            </a>\\r\\n        </div>\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- sidebar toggle -->\\r\\n        <!-- ============================================================== -->\\r\\n\\r\\n        <button mat-icon-button (click)=\\\"snav.toggle()\\\" value=\\\"sidebarclosed\\\">\\r\\n            <mat-icon>menu</mat-icon>\\r\\n        </button>\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Search - style you can find in header.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        <button mat-icon-button class=\\\"srh-btn\\\">\\r\\n            <mat-icon>search</mat-icon>\\r\\n        </button>\\r\\n        <form class=\\\"app-search\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search &amp; enter\\\">\\r\\n            <a class=\\\"cl-srh-btn\\\">\\r\\n                <i class=\\\"ti-close\\\"></i>\\r\\n            </a>\\r\\n        </form>\\r\\n        <span fxFlex></span>\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- app header component - style you can find in header.scss / header.component.ts-->\\r\\n        <!-- ============================================================== -->\\r\\n        <app-header></app-header>\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Right sidebar toggle - style you can find in rightsidebar.component.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        <button (click)=\\\"end.toggle()\\\" mat-icon-button class=\\\"ml-xs overflow-visible\\\">\\r\\n            <mat-icon>settings</mat-icon>\\r\\n        </button>\\r\\n    </mat-toolbar>\\r\\n    <!-- ============================================================== -->\\r\\n    <!-- End Topbar - style you can find in pages.scss -->\\r\\n    <!-- ============================================================== -->\\r\\n    <mat-sidenav-container class=\\\"example-sidenav-container\\\" [style.marginTop.px]=\\\"mobileQuery.matches ? 0 : 0\\\"\\r\\n        [ngClass]=\\\"{'minisidebar': minisidebar}\\\">\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Sidebar - style you can find in sidebar.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        <mat-sidenav #snav id=\\\"snav\\\" class=\\\"pl-xs\\\" [mode]=\\\"mobileQuery.matches ? 'side' : 'over'\\\" fixedTopGap=\\\"0\\\"\\r\\n            [opened]=\\\"mobileQuery.matches\\\" [disableClose]=\\\"mobileQuery.matches\\\" (open)=\\\"sidebarOpened = true\\\" (close)=\\\"sidebarOpened = false\\\"\\r\\n            [perfectScrollbar]=\\\"config\\\">\\r\\n\\r\\n            <app-sidebar class=\\\"app-sidebar\\\"></app-sidebar>\\r\\n\\r\\n        </mat-sidenav>\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Sidebar - style you can find in sidebar.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Right Sidebar - style you can find in rightsidebar.component.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        <mat-sidenav #end position=\\\"end\\\" class=\\\"chat-panel\\\" mode=\\\"over\\\" opened=\\\"false\\\">\\r\\n            <div class=\\\"scroll\\\">\\r\\n                <mat-nav-list>\\r\\n\\r\\n                    <h3 mat-subheader class=\\\"text-uppercase font-weight-bold\\\">Settings</h3>\\r\\n                    <mat-list-item>\\r\\n                        <mat-slide-toggle color=\\\"warn\\\" (change)=\\\"dir = (dir == 'rtl' ? 'ltr' : 'rtl')\\\">RTL</mat-slide-toggle>\\r\\n                    </mat-list-item>\\r\\n                    <mat-list-item>\\r\\n                        <mat-slide-toggle color=\\\"warn\\\" [(ngModel)]=\\\"boxed\\\">Boxed Layout</mat-slide-toggle>\\r\\n                    </mat-list-item>\\r\\n                    <!--<mat-list-item>\\r\\n                    <mat-slide-toggle [(ngModel)]=\\\"minisidebar\\\">Mini Sidebar</mat-slide-toggle>\\r\\n                  </mat-list-item>    -->\\r\\n                    <mat-divider></mat-divider>\\r\\n                    <h3 mat-subheader class=\\\"text-uppercase font-weight-bold\\\">Colors</h3>\\r\\n                    <mat-list-item>\\r\\n                        <mat-checkbox color=\\\"warn\\\" [(ngModel)]=\\\"danger\\\" (change)=\\\"green = blue = false\\\" class=\\\"text-danger\\\">Red</mat-checkbox>\\r\\n                    </mat-list-item>\\r\\n                    <mat-list-item>\\r\\n                        <mat-checkbox color=\\\"warn\\\" [(ngModel)]=\\\"green\\\" (change)=\\\"danger = blue = false\\\" class=\\\"text-megna\\\">Teal\\r\\n                            Green</mat-checkbox>\\r\\n                    </mat-list-item>\\r\\n                    <mat-list-item>\\r\\n                        <mat-checkbox color=\\\"warn\\\" [(ngModel)]=\\\"blue\\\" (change)=\\\"green = danger = false\\\" class=\\\"text-info\\\">Blue</mat-checkbox>\\r\\n                    </mat-list-item>\\r\\n                    <mat-list-item>\\r\\n                        <mat-checkbox color=\\\"warn\\\" [(ngModel)]=\\\"dark\\\" (change)=\\\"green = blue = danger = false\\\">Dark</mat-checkbox>\\r\\n                    </mat-list-item>\\r\\n                </mat-nav-list>\\r\\n            </div>\\r\\n        </mat-sidenav>\\r\\n\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Page container - style you can find in pages.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        <mat-sidenav-content class=\\\"page-wrapper\\\">\\r\\n            \\r\\n                <div class=\\\"page-content\\\">\\r\\n\\r\\n                    <router-outlet>\\r\\n                        <app-spinner></app-spinner>\\r\\n                    </router-outlet>\\r\\n\\r\\n                </div>\\r\\n            \\r\\n        </mat-sidenav-content>\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Page container - style you can find in pages.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n    </mat-sidenav-container>\\r\\n</div>\"","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- Notification - style you can find in header.scss -->\\r\\n<!-- ============================================================== -->\\r\\n<button [matMenuTriggerFor]=\\\"notification\\\" mat-icon-button class=\\\"m-r-10\\\">\\r\\n    <mat-icon>message</mat-icon>\\r\\n    <div class=\\\"notify\\\">\\r\\n        <span class=\\\"heartbit\\\"></span>\\r\\n        <span class=\\\"point\\\"></span>\\r\\n    </div>\\r\\n</button>\\r\\n<mat-menu #notification=\\\"matMenu\\\" class=\\\"mymegamenu\\\">\\r\\n    <div class=\\\"mailbox\\\">\\r\\n        <ul>\\r\\n            <li>\\r\\n                <div class=\\\"drop-title\\\">Notifications</div>\\r\\n            </li>\\r\\n            <li>\\r\\n                <div class=\\\"message-center\\\">\\r\\n                    <perfect-scrollbar [config]=\\\"config\\\">\\r\\n                        <!-- Message -->\\r\\n                        <a href=\\\"#\\\" *ngFor=\\\"let notification of notifications\\\">\\r\\n                            <div class=\\\"round {{notification.round}}\\\">\\r\\n                                <i class=\\\"{{notification.icon}}\\\"></i>\\r\\n                            </div>\\r\\n                            <div class=\\\"mail-content\\\">\\r\\n                                <h5>{{notification.title}}</h5>\\r\\n                                <span class=\\\"mail-desc\\\">{{notification.subject}}</span>\\r\\n                                <span class=\\\"time\\\">{{notification.time}}</span>\\r\\n                            </div>\\r\\n                        </a>\\r\\n\\r\\n                    </perfect-scrollbar>\\r\\n                </div>\\r\\n            </li>\\r\\n\\r\\n        </ul>\\r\\n    </div>\\r\\n</mat-menu>\\r\\n<!-- ============================================================== -->\\r\\n<!-- Profile - style you can find in header.scss -->\\r\\n<!-- ============================================================== -->\\r\\n<button [matMenuTriggerFor]=\\\"message\\\" mat-icon-button class=\\\"m-r-10\\\">\\r\\n    <mat-icon>email</mat-icon>\\r\\n    <div class=\\\"notify\\\">\\r\\n        <span class=\\\"heartbit\\\"></span>\\r\\n        <span class=\\\"point\\\"></span>\\r\\n    </div>\\r\\n</button>\\r\\n<mat-menu #message=\\\"matMenu\\\" class=\\\"mymessage\\\">\\r\\n    <div class=\\\"mailbox\\\">\\r\\n        <ul>\\r\\n            <li>\\r\\n                <div class=\\\"drop-title\\\">You have 4 new Mymessages</div>\\r\\n            </li>\\r\\n            <li>\\r\\n                <div class=\\\"message-center\\\">\\r\\n                    <perfect-scrollbar [config]=\\\"config\\\">\\r\\n                        <!-- Message -->\\r\\n                        <a href=\\\"#\\\" *ngFor=\\\"let mymessage of mymessages\\\">\\r\\n                            <div class=\\\"user-img\\\">\\r\\n                                <img src=\\\"{{mymessage.useravatar}}\\\" alt=\\\"user\\\" class=\\\"img-circle\\\" width=\\\"40\\\">\\r\\n                                <span class=\\\"profile-status {{mymessage.status}} pull-right\\\"></span>\\r\\n                            </div>\\r\\n                            <div class=\\\"mail-content\\\">\\r\\n                                <h5>{{mymessage.from}}</h5>\\r\\n                                <span class=\\\"mail-desc\\\">{{mymessage.subject}}</span>\\r\\n                                <span class=\\\"time\\\">{{mymessage.time}}</span>\\r\\n                            </div>\\r\\n                        </a>\\r\\n                        <!-- Message -->\\r\\n                    </perfect-scrollbar>\\r\\n                </div>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</mat-menu>\\r\\n<!-- ============================================================== -->\\r\\n<!-- Profile - style you can find in header.scss -->\\r\\n<!-- ============================================================== -->\\r\\n<button [matMenuTriggerFor]=\\\"profile\\\" mat-icon-button class=\\\"m-r-5\\\">\\r\\n    <img src=\\\"assets/images/users/1.jpg\\\" alt=\\\"user\\\" class=\\\"profile-pic\\\"> </button>\\r\\n<mat-menu #profile=\\\"matMenu\\\" class=\\\"mymegamenu\\\">\\r\\n    <button mat-menu-item>\\r\\n        <mat-icon>settings</mat-icon> Settings </button>\\r\\n    <button mat-menu-item>\\r\\n        <mat-icon>account_box</mat-icon> Profile </button>\\r\\n    <button mat-menu-item>\\r\\n        <mat-icon>notifications_off</mat-icon> Disable notifications </button>\\r\\n    <button mat-menu-item>\\r\\n        <mat-icon>exit_to_app</mat-icon> Sign Out </button>\\r\\n</mat-menu>\"","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- sidebar -->\\r\\n<!-- ============================================================== -->\\r\\n\\r\\n\\r\\n<mat-nav-list appAccordion>\\r\\n    <mat-list-item appAccordionLink *ngFor=\\\"let menuitem of menuItems.getMenuitem()\\\" routerLinkActive=\\\"selected\\\" group=\\\"{{menuitem.state}}\\\">\\r\\n        <a class=\\\"\\\" appAccordionToggle [routerLink]=\\\"['/', menuitem.state]\\\" *ngIf=\\\"menuitem.type === 'link'\\\">\\r\\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\\r\\n            <span>{{ menuitem.name }}</span>\\r\\n            <span fxFlex></span>\\r\\n            <span class=\\\"label label-{{ badge.type }}\\\" *ngFor=\\\"let badge of menuitem.badge\\\">{{ badge.value }}</span>\\r\\n        </a>\\r\\n\\r\\n        <a class=\\\"\\\" appAccordionToggle href=\\\"{{menuitem.state}}\\\" *ngIf=\\\"menuitem.type === 'extLink'\\\">\\r\\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\\r\\n            <span>{{ menuitem.name }}</span>\\r\\n            <span fxFlex></span>\\r\\n            <span class=\\\"label label-{{ badge.type }}\\\" *ngFor=\\\"let badge of menuitem.badge\\\">{{ badge.value }}</span>\\r\\n        </a>\\r\\n        <a class=\\\"\\\" appAccordionToggle href=\\\"{{menuitem.state}}\\\" target=\\\"_blank\\\" *ngIf=\\\"menuitem.type === 'extTabLink'\\\">\\r\\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\\r\\n            <span>{{ menuitem.name}}</span>\\r\\n            <span fxFlex></span>\\r\\n            <span class=\\\"label label-{{ badge.type }}\\\" *ngFor=\\\"let badge of menuitem.badge\\\">{{ badge.value }}</span>\\r\\n        </a>\\r\\n\\r\\n        <a class=\\\"\\\" appAccordionToggle href=\\\"javascript:;\\\" *ngIf=\\\"menuitem.type === 'sub'\\\">\\r\\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\\r\\n            <span>{{ menuitem.name }}</span>\\r\\n            <span fxFlex></span>\\r\\n            <span class=\\\"label label-{{ badge.type }}\\\" *ngFor=\\\"let badge of menuitem.badge\\\">{{ badge.value }}</span>\\r\\n            <mat-icon class=\\\"dd-icon\\\">keyboard_arrow_down</mat-icon>\\r\\n        </a>\\r\\n        <mat-nav-list class=\\\"sub-item\\\" *ngIf=\\\"menuitem.type === 'sub'\\\">\\r\\n            <mat-list-item *ngFor=\\\"let childitem of menuitem.children\\\" routerLinkActive=\\\"selected\\\">\\r\\n                <a [routerLink]=\\\"['/', menuitem.state, childitem.state ]\\\"  *ngIf=\\\"childitem.type === 'link'\\\" class=\\\"relative\\\"\\r\\n                    routerLinkActive=\\\"selected\\\" (click)=\\\"itemSelect[i]=j\\\">{{ childitem.name}}</a>\\r\\n            </mat-list-item>\\r\\n            <mat-list-item *ngFor=\\\"let childitem of menuitem.children; let j=index\\\">\\r\\n                <a class=\\\"\\\" href=\\\"javascript: void(0);\\\" *ngIf=\\\"childitem.type === 'subchild'\\\" (click)=\\\"itemSelect[i]=j\\\"\\r\\n                    [ngClass]=\\\"j==itemSelect[i]? 'selected' : ''\\\">\\r\\n                    <span>{{ childitem.name }}</span>\\r\\n                    <span fxFlex></span>\\r\\n                    <mat-icon class=\\\"dd-icon\\\">keyboard_arrow_down</mat-icon>\\r\\n                </a>\\r\\n                <mat-nav-list class=\\\"child-sub-item\\\" *ngIf=\\\"childitem.type === 'subchild'\\\" >\\r\\n                    <mat-list-item *ngFor=\\\"let child of childitem.subchildren\\\" routerLinkActive=\\\"selected\\\">\\r\\n                        <a [routerLink]=\\\"['/', menuitem.state, childitem.state, child.state ]\\\" routerLinkActive=\\\"selected\\\" >{{child.name}}</a>\\r\\n                    </mat-list-item>\\r\\n                </mat-nav-list>\\r\\n            </mat-list-item>\\r\\n\\r\\n        </mat-nav-list>\\r\\n\\r\\n        <div class=\\\"saperator text-muted\\\" *ngIf=\\\"menuitem.type === 'saperator'\\\">\\r\\n            <span>{{ menuitem.name }}</span>\\r\\n        </div>\\r\\n    </mat-list-item>\\r\\n</mat-nav-list>\"","var map = {\n\t\"./Documentation/IOS/ios/ios.module\": [\n\t\t\"./src/app/Documentation/IOS/ios/ios.module.ts\",\n\t\t\"common\",\n\t\t\"Documentation-IOS-ios-ios-module\"\n\t],\n\t\"./Documentation/android/android.module\": [\n\t\t\"./src/app/Documentation/android/android.module.ts\",\n\t\t\"Documentation-android-android-module\"\n\t],\n\t\"./Documentation/angular/angular.module\": [\n\t\t\"./src/app/Documentation/angular/angular.module.ts\",\n\t\t\"common\",\n\t\t\"Documentation-angular-angular-module\"\n\t],\n\t\"./Documentation/webservice/webservice.module\": [\n\t\t\"./src/app/Documentation/webservice/webservice.module.ts\",\n\t\t\"common\",\n\t\t\"Documentation-webservice-webservice-module\"\n\t],\n\t\"./hero/hero.module\": [\n\t\t\"./src/app/hero/hero.module.ts\",\n\t\t\"hero-hero-module\"\n\t],\n\t\"./icons/mat-icon.module\": [\n\t\t\"./src/app/icons/mat-icon.module.ts\",\n\t\t\"icons-mat-icon-module\"\n\t],\n\t\"./material-component/material.module\": [\n\t\t\"./src/app/material-component/material.module.ts\",\n\t\t\"material-component-material-module\"\n\t],\n\t\"./starter/starter.module\": [\n\t\t\"./src/app/starter/starter.module.ts\",\n\t\t\"starter-starter-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"\\n\\n* ::ng-deep pre{\\n    background-color: rgba(40, 136, 229, 0.1);\\n    border: 1px solid rgba(14, 72, 128, 0.4);\\n    border-radius: 5px;\\n    color: rgb(6, 37, 68);\\n    padding: 1rem;\\n    overflow: auto;\\n    max-width: 100%;\\n}\\n\\n* ::ng-deep pre .hl {\\n    color: #062544;\\n    background: rgba(255, 0, 0, 0.4);\\n    padding: 1px 5px;\\n    border-radius: 3px;\\n}\\n\\nmat-toolbar .navbar-header .navbar-brand {\\n    display: -webkit-box;\\n    display: block;\\n    line-height: 18px;\\n    -webkit-box-align: center;\\n    align-items: center;\\n    width: 90px;\\n}\\n\\n.navbar-brand img {\\n    max-width: 100%;\\n\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTtJQUNJLHlDQUF5QztJQUN6Qyx3Q0FBd0M7SUFDeEMsa0JBQWtCO0lBQ2xCLHFCQUFxQjtJQUNyQixhQUFhO0lBQ2IsY0FBYztJQUNkLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsZ0NBQWdDO0lBQ2hDLGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxvQkFBb0I7SUFDcEIsY0FBYztJQUNkLGlCQUFpQjtJQUNqQix5QkFBeUI7SUFDekIsbUJBQW1CO0lBQ25CLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGVBQWU7O0FBRW5CIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcblxuKiA6Om5nLWRlZXAgcHJle1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDAsIDEzNiwgMjI5LCAwLjEpO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMTQsIDcyLCAxMjgsIDAuNCk7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGNvbG9yOiByZ2IoNiwgMzcsIDY4KTtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIG1heC13aWR0aDogMTAwJTtcbn1cblxuKiA6Om5nLWRlZXAgcHJlIC5obCB7XG4gICAgY29sb3I6ICMwNjI1NDQ7XG4gICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDAsIDAsIDAuNCk7XG4gICAgcGFkZGluZzogMXB4IDVweDtcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XG59XG5cbm1hdC10b29sYmFyIC5uYXZiYXItaGVhZGVyIC5uYXZiYXItYnJhbmQge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB3aWR0aDogOTBweDtcbn1cblxuLm5hdmJhci1icmFuZCBpbWcge1xuICAgIG1heC13aWR0aDogMTAwJTtcblxufSJdfQ== */\"","import * as $ from 'jquery';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  NgZone,\r\n  OnDestroy,\r\n  ViewChild,\r\n  HostListener,\r\n  Directive,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { MenuItems } from '../../src/app/shared/menu-items/menu-items';\r\nimport { AppHeaderComponent } from '../app/layouts/full/header/header.component';\r\nimport { AppSidebarComponent } from '../app/layouts/full/sidebar/sidebar.component';\r\n\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnDestroy, AfterViewInit {\r\n  mobileQuery: MediaQueryList;\r\n  dir = 'ltr';\r\n  green: boolean;\r\n  blue: boolean;\r\n  dark: boolean;\r\n  minisidebar: boolean;\r\n  boxed: boolean;\r\n  danger: boolean;\r\n  showHide: boolean;\r\n  sidebarOpened;\r\n\r\n  public config: PerfectScrollbarConfigInterface = {};\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItems: MenuItems\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n  ngAfterViewInit() {\r\n    // This is for the topbar search\r\n    (<any>$('.srh-btn, .cl-srh-btn')).on('click', function() {\r\n      (<any>$('.app-search')).toggle(200);\r\n    });\r\n    // This is for the megamenu\r\n  }\r\n\r\n  // Mini sidebar\r\n}","import * as $ from 'jquery';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { AppRoutes } from './app.routing';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { AppHeaderComponent } from './layouts/full/header/header.component';\r\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DemoMaterialModule } from './demo-material-module';\r\n\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { SpinnerComponent } from './shared/spinner.component';\r\n\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatCardModule, MatCheckboxModule, MatChipsModule, MatDatepickerModule, MatDialogModule, MatExpansionModule, MatFormFieldModule, MatGridListModule, MatIconModule, MatInputModule, MatListModule, MatMenuModule, MatPaginatorModule, MatProgressBarModule, MatProgressSpinnerModule, MatRadioModule, MatSelectModule, MatSidenavModule, MatSliderModule, MatSlideToggleModule, MatSnackBarModule, MatSortModule, MatTableModule, MatTabsModule, MatToolbarModule, MatTooltipModule, MatStepperModule } from '@angular/material';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true,\r\n  wheelSpeed: 2,\r\n  wheelPropagation: true\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FullComponent,\r\n    AppHeaderComponent,\r\n    SpinnerComponent,\r\n    AppSidebarComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    DemoMaterialModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    PerfectScrollbarModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    RouterModule.forRoot(AppRoutes),\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatStepperModule\r\n\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { FullComponent } from './layouts/full/full.component';\r\n\r\nexport const AppRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FullComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: '/home',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'material',\r\n        loadChildren:\r\n          './material-component/material.module#MaterialComponentsModule'\r\n      },\r\n      {\r\n        path: 'starter',\r\n        loadChildren: './starter/starter.module#StarterModule'\r\n      },\r\n      {\r\n        path: 'icons',\r\n        loadChildren: './icons/mat-icon.module#IconsModule'\r\n      }\r\n    ]\r\n  },\r\n  { path: 'home', loadChildren: './hero/hero.module#HeroModule'},\r\n  { path: 'ios', loadChildren: './Documentation/IOS/ios/ios.module#IOSModule'},\r\n  { path: 'android', loadChildren: './Documentation/android/android.module#AndroidModule'},\r\n  { path: 'angular', loadChildren: './Documentation/angular/angular.module#AngularModule'},\r\n  { path: 'webservice', loadChildren: './Documentation/webservice/webservice.module#WebServiceModule'},\r\n];\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatFormFieldModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatStepperModule\r\n} from '@angular/material';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\n\r\n/**\r\n * NgModule that includes all Material modules that are required to serve the demo-app.\r\n */\r\n@NgModule({\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatTableModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatNativeDateModule,\r\n    CdkTableModule,\r\n    A11yModule,\r\n    BidiModule,\r\n    CdkAccordionModule,\r\n    ObserversModule,\r\n    OverlayModule,\r\n    PlatformModule,\r\n    PortalModule\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n","import * as $ from 'jquery';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  NgZone,\r\n  OnDestroy,\r\n  ViewChild,\r\n  HostListener,\r\n  Directive,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { MenuItems } from '../../shared/menu-items/menu-items';\r\nimport { AppHeaderComponent } from './header/header.component';\r\nimport { AppSidebarComponent } from './sidebar/sidebar.component';\r\n\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\n/** @title Responsive sidenav */\r\n@Component({\r\n  selector: 'app-full-layout',\r\n  templateUrl: 'full.component.html',\r\n  styleUrls: []\r\n})\r\nexport class FullComponent implements OnDestroy, AfterViewInit {\r\n  mobileQuery: MediaQueryList;\r\n  dir = 'ltr';\r\n  green: boolean;\r\n  blue: boolean;\r\n  dark: boolean;\r\n  minisidebar: boolean;\r\n  boxed: boolean;\r\n  danger: boolean;\r\n  showHide: boolean;\r\n  sidebarOpened;\r\n\r\n  public config: PerfectScrollbarConfigInterface = {};\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItems: MenuItems\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n  ngAfterViewInit() {\r\n    // This is for the topbar search\r\n    (<any>$('.srh-btn, .cl-srh-btn')).on('click', function() {\r\n      (<any>$('.app-search')).toggle(200);\r\n    });\r\n    // This is for the megamenu\r\n  }\r\n\r\n  // Mini sidebar\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppHeaderComponent {\r\n  public config: PerfectScrollbarConfigInterface = {};\r\n  // This is for Notifications\r\n  notifications: Object[] = [\r\n    {\r\n      round: 'round-danger',\r\n      icon: 'ti-link',\r\n      title: 'Launch Admin',\r\n      subject: 'Just see the my new admin!',\r\n      time: '9:30 AM'\r\n    },\r\n    {\r\n      round: 'round-success',\r\n      icon: 'ti-calendar',\r\n      title: 'Event today',\r\n      subject: 'Just a reminder that you have event',\r\n      time: '9:10 AM'\r\n    },\r\n    {\r\n      round: 'round-info',\r\n      icon: 'ti-settings',\r\n      title: 'Settings',\r\n      subject: 'You can customize this template as you want',\r\n      time: '9:08 AM'\r\n    },\r\n    {\r\n      round: 'round-primary',\r\n      icon: 'ti-user',\r\n      title: 'Pavan kumar',\r\n      subject: 'Just see the my admin!',\r\n      time: '9:00 AM'\r\n    }\r\n  ];\r\n\r\n  // This is for Mymessages\r\n  mymessages: Object[] = [\r\n    {\r\n      useravatar: 'assets/images/users/1.jpg',\r\n      status: 'online',\r\n      from: 'Pavan kumar',\r\n      subject: 'Just see the my admin!',\r\n      time: '9:30 AM'\r\n    },\r\n    {\r\n      useravatar: 'assets/images/users/2.jpg',\r\n      status: 'busy',\r\n      from: 'Sonu Nigam',\r\n      subject: 'I have sung a song! See you at',\r\n      time: '9:10 AM'\r\n    },\r\n    {\r\n      useravatar: 'assets/images/users/2.jpg',\r\n      status: 'away',\r\n      from: 'Arijit Sinh',\r\n      subject: 'I am a singer!',\r\n      time: '9:08 AM'\r\n    },\r\n    {\r\n      useravatar: 'assets/images/users/4.jpg',\r\n      status: 'offline',\r\n      from: 'Pavan kumar',\r\n      subject: 'Just see the my admin!',\r\n      time: '9:00 AM'\r\n    }\r\n  ];\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  NgZone,\r\n  OnDestroy,\r\n  ViewChild,\r\n  HostListener,\r\n  Directive,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { MenuItems } from '../../../shared/menu-items/menu-items';\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppSidebarComponent implements OnDestroy {\r\n  public config: PerfectScrollbarConfigInterface = {};\r\n  mobileQuery: MediaQueryList;\r\n\r\n  private _mobileQueryListener: () => void;\r\n  status: boolean = true;\r\n  \r\n  itemSelect:number[]=[]\r\n\r\n  subclickEvent() {\r\n    this.status = true;\r\n  }\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItems: MenuItems\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  OnInit,\r\n  AfterViewInit,\r\n  AfterContentChecked\r\n} from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport 'rxjs/add/operator/filter';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordion]'\r\n})\r\nexport class AccordionDirective implements AfterContentChecked {\r\n  protected navlinks: Array<AccordionLinkDirective> = [];\r\n\r\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link !== selectedLink) {\r\n        link.selected = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  addLink(link: AccordionLinkDirective): void {\r\n    this.navlinks.push(link);\r\n  }\r\n\r\n  removeGroup(link: AccordionLinkDirective): void {\r\n    const index = this.navlinks.indexOf(link);\r\n    if (index !== -1) {\r\n      this.navlinks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  checkOpenLinks() {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link.group) {\r\n        const routeUrl = this.router.url;\r\n        const currentUrl = routeUrl.split('/');\r\n        if (currentUrl.indexOf(link.group) > 0) {\r\n          link.selected = true;\r\n          this.closeOtherLinks(link);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.router.events\r\n      .filter(event => event instanceof NavigationEnd)\r\n      .subscribe(e => this.checkOpenLinks());\r\n  }\r\n\r\n  constructor(private router: Router) {\r\n    setTimeout(() => this.checkOpenLinks());\r\n  }\r\n}\r\n","import { Directive, HostListener, Inject } from '@angular/core';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionToggle]'\r\n})\r\nexport class AccordionAnchorDirective {\r\n  protected navlink: AccordionLinkDirective;\r\n\r\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\r\n    this.navlink = navlink;\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(e: any) {\r\n    this.navlink.toggle();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  HostBinding,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { AccordionDirective } from './accordion.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionLink]'\r\n})\r\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  public group: any;\r\n\r\n  @HostBinding('class.selected')\r\n  @Input()\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: boolean) {\r\n    this._selected = value;\r\n    if (value) {\r\n      this.nav.closeOtherLinks(this);\r\n    }\r\n  }\r\n\r\n  protected _selected: boolean;\r\n  protected nav: AccordionDirective;\r\n\r\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\r\n    this.nav = nav;\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    this.nav.addLink(this);\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.nav.removeGroup(this);\r\n  }\r\n\r\n  toggle(): any {\r\n    this.selected = !this.selected;\r\n  }\r\n}\r\n","export * from './accordionanchor.directive';\r\nexport * from './accordionlink.directive';\r\nexport * from './accordion.directive';\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface BadgeItem {\r\n  type: string;\r\n  value: string;\r\n}\r\nexport interface Saperator {\r\n  name: string;\r\n  type?: string;\r\n}\r\nexport interface ChildrenItems {\r\n  state: string;\r\n  name: string;\r\n  type?: string;\r\n}\r\n\r\nexport interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n  badge?: BadgeItem[];\r\n  saperator?: Saperator[];\r\n  children?: ChildrenItems[];\r\n}\r\n\r\nconst MENUITEMS = [\r\n  {\r\n    state: 'home',\r\n    name: 'Home',\r\n    type: 'link',\r\n    icon: 'home'\r\n  },\r\n  {\r\n    state: 'ios',\r\n    name: 'IOS',\r\n    type: 'sub',\r\n    icon: 'phone_iphone',\r\n    //badge: [{ type: 'red', value: '2' }],\r\n    children: [\r\n      { state: 'getting-started', name: 'Getting Started', type: 'link' },\r\n      { state: 'single-app', name: 'Single App', type: 'link' },\r\n      { state: 'navigation', name: 'Navigation', type: 'link' },\r\n    ]\r\n  },\r\n  {\r\n    state: 'android',\r\n    name: 'Android',\r\n    type: 'sub',\r\n    icon: 'phone_android',\r\n    children: [\r\n      { state: 'getting-started', name: 'Getting Started', type: 'link' },\r\n    ]\r\n  },\r\n  {\r\n    state: 'angular',\r\n    name: 'Angular',\r\n    type: 'sub',\r\n    icon: 'font_download',\r\n    children: [\r\n      { state: 'getting-started', name: 'Getting Started', type: 'link' },\r\n      { state: 'directory-overview', name: 'Directory overview', type: 'link' },\r\n      { state: 'main-plugins-overview', name: 'Main plugins overview', type: 'link' },\r\n      { state: 'main-components', name: 'Main components', type: 'link' },\r\n      { state: 'developing-features', name: 'Developing features', type: 'link' },\r\n    ]\r\n  },\r\n  {\r\n    state: 'webservice',\r\n    name: 'Web Service',\r\n    type: 'sub',\r\n    icon: 'router',\r\n    children: [\r\n      { state: 'getting-started', name: 'Getting Started', type: 'link' },\r\n      { state: 'introduction', name: 'Introduction', type: 'link' },\r\n      { state: 'connection-string', name: 'Connection String', type: 'link' },\r\n      { state: 'helpers', name: 'Helpers', type: 'link' },\r\n      { state: 'models', name: 'Models', type: 'link' },\r\n      { state: 'controllers', name: 'Controllers', type: 'link' },\r\n      { state: 'sending-emails', name: 'Sending Emails', type: 'link' },\r\n      { state: 'new-table', name: 'DB Tables', type: 'link' },\r\n      { state: 'test-debug', name: 'Testing & Debugging', type: 'link' },\r\n      { state: 'publish', name: 'Publishing', type: 'link' },\r\n\r\n    ]\r\n  },\r\n];\r\n\r\n@Injectable()\r\nexport class MenuItems {\r\n  getMenuitem(): Menu[] {\r\n    return MENUITEMS;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { MenuItems } from './menu-items/menu-items';\r\nimport {\r\n  AccordionAnchorDirective,\r\n  AccordionLinkDirective,\r\n  AccordionDirective\r\n} from './accordion';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n  ],\r\n  exports: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n  ],\r\n  providers: [MenuItems]\r\n})\r\nexport class SharedModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnDestroy,\r\n  Inject,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {\r\n  Router,\r\n  NavigationStart,\r\n  NavigationEnd,\r\n  NavigationCancel,\r\n  NavigationError\r\n} from '@angular/router';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\r\n        <div class=\"spinner\">\r\n          <div class=\"double-bounce1\"></div>\r\n          <div class=\"double-bounce2\"></div>\r\n        </div>\r\n    </div>`,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SpinnerComponent implements OnDestroy {\r\n  public isSpinnerVisible = true;\r\n\r\n  @Input() public backgroundColor = 'rgba(0, 115, 170, 0.69)';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {\r\n    this.router.events.subscribe(\r\n      event => {\r\n        if (event instanceof NavigationStart) {\r\n          this.isSpinnerVisible = true;\r\n        } else if (\r\n          event instanceof NavigationEnd ||\r\n          event instanceof NavigationCancel ||\r\n          event instanceof NavigationError\r\n        ) {\r\n          this.isSpinnerVisible = false;\r\n        }\r\n      },\r\n      () => {\r\n        this.isSpinnerVisible = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.isSpinnerVisible = false;\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport 'hammerjs';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}