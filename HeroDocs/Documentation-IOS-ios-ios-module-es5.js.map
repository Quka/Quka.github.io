{"version":3,"sources":["webpack:///./src/app/Documentation/IOS/ios/Childcomponents/getting-started/getting-started.component.html","webpack:///./src/app/Documentation/IOS/ios/Childcomponents/navigation/navigation.component.html","webpack:///./src/app/Documentation/IOS/ios/Childcomponents/single-app/single-app.component.html","webpack:///./src/app/Documentation/IOS/ios/ios.component.html","webpack:///./src/app/Documentation/IOS/ios/Childcomponents/getting-started/getting-started.component.css","webpack:///./src/app/Documentation/IOS/ios/Childcomponents/getting-started/getting-started.component.ts","webpack:///./src/app/Documentation/IOS/ios/Childcomponents/navigation/navigation.component.css","webpack:///./src/app/Documentation/IOS/ios/Childcomponents/navigation/navigation.component.ts","webpack:///./src/app/Documentation/IOS/ios/Childcomponents/single-app/single-app.component.css","webpack:///./src/app/Documentation/IOS/ios/Childcomponents/single-app/single-app.component.ts","webpack:///./src/app/Documentation/IOS/ios/ios-routing.module.ts","webpack:///./src/app/Documentation/IOS/ios/ios.component.css","webpack:///./src/app/Documentation/IOS/ios/ios.component.ts","webpack:///./src/app/Documentation/IOS/ios/ios.module.ts"],"names":[],"mappings":"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","file":"Documentation-IOS-ios-ios-module-es5.js","sourcesContent":["module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>IOS Getting Started</mat-card-title>\\n    </mat-card-header>\\n</mat-card>\\n\\n\\n<app-tab-group [contents]=\\\"content\\\">Hej</app-tab-group>\"","module.exports = \"<p>navigation works!</p>\\n\"","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>IOS Single App</mat-card-title>\\n    </mat-card-header>\\n</mat-card>\\n\\n<app-tab-group [contents]=\\\"content\\\">Hej</app-tab-group>\"","module.exports = \"\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RvY3VtZW50YXRpb24vSU9TL2lvcy9DaGlsZGNvbXBvbmVudHMvZ2V0dGluZy1zdGFydGVkL2dldHRpbmctc3RhcnRlZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { gSContent } from '../../../../interfaces/getting-started-content';\n\n@Component({\n  selector: 'app-getting-started',\n  templateUrl: './getting-started.component.html',\n  styleUrls: ['./getting-started.component.css']\n})\nexport class GettingStartedComponent implements OnInit {\n\n  content: gSContent[] = [\n    {\n      tabtitle: 'Hardware',\n      intro: 'You will need the following in order to develop IOS content on the HeroAppmaker platform',\n      list: [\n        {\n          title: 'Hardware',\n          subtitle: '',\n          headerStyle: 'bg-info text-white',\n          content:\n            `\n          <ul>\n          <li>A Macbook or iMac</li>\n          <li>A testdevice iPhone or iPad</li>\n          </ul>\n          `\n        }\n\n      ]\n    },\n    {\n      tabtitle: \"Software\",\n      intro: \"You will need the following software in order to develop IOS content on the HeroAppMaker platform\",\n      list: [\n        {\n          title: \"Xcode\",\n          subtitle: \"Swift/Objective C IDE\",\n          headerStyle: 'bg-info text-white',\n          content:\n            `\n               <p>Xcode is our primary IOS IDE</p>\n               <p>It is recommended to not have it update automaticly, because it can cause trouble when opening projects - we update Xcode scheduled</p>\n               <p>Current versions</p>\n               <ul>\n                <li>Swift: version 4.0</li>\n                <li>Xcode: version 10.3</li>\n                </ul>\n                <a href=\"https://apps.apple.com/dk/app/xcode/id497799835?l=da&mt=12\">Download it from the appstore</a>\n               `\n        },\n        {\n          title: \"SQLPro\",\n          subtitle: \"MSSQL Client\",\n          headerStyle: 'bg-info text-white',\n          content:\n          `\n          <p>SQL Pro is our MSSQL client of choice, it takes all sql queries and connects easily to the databases</p>\n          <p>SQL Pro is paid software and requires a license key</p>\n          \n          <p>License Key</p>\n          <ul>\n            <li>S1-3689B7-4851E9-AADF98-B8608D-D860AA-PRYCUA</li>\n            \n          </ul>\n          <a href=\"https://www.macsqlclient.com/\">Download it from their website</a>\n          `\n        },\n        \n      ]\n    }\n  ]\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RvY3VtZW50YXRpb24vSU9TL2lvcy9DaGlsZGNvbXBvbmVudHMvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RvY3VtZW50YXRpb24vSU9TL2lvcy9DaGlsZGNvbXBvbmVudHMvc2luZ2xlLWFwcC9zaW5nbGUtYXBwLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { gSContent } from '../../../../interfaces/getting-started-content';\nimport { CardItem } from '../../../../interfaces/card-item';\n\n@Component({\n  selector: 'app-single-app',\n  templateUrl: './single-app.component.html',\n  styleUrls: ['./single-app.component.css']\n})\nexport class SingleAppComponent implements OnInit {\n  items: CardItem[] = [\n    {\n      title: 'Hardware',\n      subtitle: 'What is the Single App',\n      headerStyle: 'bg-info text-white',\n      content: `\n      <p>The Single App is an tabbar style mobile application. It is made from a tabbar navigation controller that can display up to 5 different pages.</p>\n      <p>The app loads a list list from the DB and based on that list it generates the tabbar and the icons. THis will be shown in detail later.</p>\n      `\n    },\n    \n  ]\n\n  content: gSContent[] = [\n        {\n          tabtitle: \"Introduction\",\n          intro: \"The Single App is an tabbar style mobile application. It is made from a tabbar navigation controller that can display up to 5 different pages.\",\n          list: [\n            {\n              title: \"Purpose\",\n              subtitle: \"What do we use the single app for?\",\n              headerStyle: 'bg-info text-white',\n              content:\n              `\n              <p>The app loads a list list from the DB and based on that list it generates the tabbar and the icons. THis will be shown in detail later.</p>\n              `\n            },\n    \n          ]\n        },\n            {\n              tabtitle: \"Directory overview\",\n              intro: \"An overview and explanation of the IOS Single App directory\",\n              list: [\n                {\n                  title: 'Folder structure',\n                  subtitle: 'An overview of the folder structure',\n                  headerStyle: 'bg-info text-white',\n                  content: `\n                  <p>Below is the folder structure visualized with corresponding comments</p>\n                  <ul>\n                  <li><strong>SingleApp</strong> - Project root, contains the entire project\n                      <ul>\n                          <li><strong>BaseClasses</strong> - base classes for buttons, labels and much more - used if we want to create a class for UIElements.\n                          <li><strong>Launcscreens</strong> - used for custom launchscreens for each app.\n                          <li><strong>PlistFiles</strong> - plist files, witch are used for connecting to firebase services.\n                          <li><strong>TableCells</strong> - cell adapters for prototype cells - used for creating a connection between cell and code.\n                          <li><strong>HelperClasses</strong> - all utility classes\n                              <ul>\n                                  <li><strong>Utilities</strong> - global functions.\n                                  <li><strong>Extensions</strong> - class extensions.\n                                  <li><strong>Controllers</strong> - controllers for http requests.\n                                      <ul>\n                                          <li><strong>Pages</strong> - http requests for pages.\n                                          <li><strong>Resources</strong> - http requests for resurces like menu, layout, images etc.\n                                      </ul>\n                              </ul>\n                          <li><strong>Assets</strong> - contains asset folder for each app, containing icons, launchscreen images and other custom image files.\n                          <li><strong>Constants</strong> - constant files where data is stored locally when loaded from the DB.\n                              <ul>\n                                  <li><strong>AppConstants</strong> - Contains a constant file for each app with appid.\n                              </ul>\n                          <li><strong>Model</strong> - modelclasses\n                          <li><strong>ViewController</strong> - viewcontrollers\n                              <ul>\n                                  <li><strong>Pages</strong> - viewcontrollers for pages.\n                                  <li><strong>Loading</strong> - viewcontroller for loading.\n                              </ul>\n                          <li><strong>View</strong> - storyboards for every page\n                              \n                          </li>\n                      </ul>\n                  </li>\n              </ul>\n              <p>The project contains additional folders and files - those of importance will be explained in detail later</p>\n                  `\n                }\n        \n              ]\n            },\n\n            {\n              tabtitle: \"Add new page\",\n              intro: \"Adding a new page to the single app requires a certain amount of tasks to be performed in order to add the page for production\",\n              list: [\n                {\n                  title: \"Database\",\n                  subtitle: \"\",\n                  headerStyle: 'bg-info text-white',\n                  content:\n                  `\n                  <p><strong>PageId</strong></p>\n                  <p>When adding a new page you have to add it to the DB first</p>\n                  <p>Adding the page to the list of pages - execute the code below in an SQL Client</p>\n<pre>\nINSERT INTO dbo.PageId ( name, description, app) \nVALUES (\n    '<span class=\"hl\">[PageName]</span>', \n    '<span class=\"hl\">[PageDescription]</span>', \n    '<span class=\"hl\">[AppType (Single/Event/AppInApp)]</span>'\n);</pre>\n\n                  <p>This adds the page to the list of pages that is shown in the Add Page dropdown section of the dashboard</p>\n\n                  <p><strong>Table</strong></p>\n                  <p>Next we add a new table for the page - all pages have to contain id, appId and targetPageId - theese are essential for the system to work and explained in detail in another chapter</p>\n<pre>\nCREATE TABLE <span class=\"hl\">[TableName]</span> (\n    id int IDENTITY(1,1) PRIMARY KEY,\n    appId int NOT NULL,\n    targetPageId int NOT NULL,\n    <span class=\"hl\">[AdditionalProperties]</span> NOT NULL\n);</pre>\n                  <p>This adds the new table that we can use to store page data</p>\n\n                  `\n                },\n                {\n                title: \"Webservice\",\n                subtitle: \"\",\n                headerStyle: 'bg-info text-white',\n                content:\n                `\n                <p>A new entry in the webservice HAppWebSerivice is required - see information in the Webservice section on how this is done</p>\n                <a href=\"\">Insert link to webservice</a>\n                 `\n                },\n\n                {\n                  \n                  title: \"Model Class\",\n                  subtitle: \"\",\n                  headerStyle: 'bg-info text-white',\n                  content:\n                  `\n                  <p>Create a modelclass based on the table created in the DB</p>\n                  <p>In swift you have to make a model struct that is decodeable - it means that the class can be parsed automaticly by Xcode</p>\n                  <p>Create a new swift file in the ModelClass directory and use the below class as inspiration</p>\n                  <pre>\nimport Foundation\n\nstruct Message: <span class=\"hl\">Decodable</span>{\n    var id: Int\n    var appId: Int\n    var pageId: Int\n    var imageUrl: String\n    var messageDate: String\n    var messageHeader: String\n    var messageContent: String\n}</pre>\n                  `\n                },\n                {\n                title: \"Controller\",\n                subtitle: \"HelperClasses/Controllers/Pages\",\n                headerStyle: 'bg-info text-white',\n                content:\n                `\n                <p>ToDo</p>\n                 `\n                },\n                {\n                title: \"Loading\",\n                subtitle: \"ViewController/Loading\",\n                headerStyle: 'bg-info text-white',\n                content:\n                `\n                <p>ToDo</p>\n                `\n                },\n                {\n                title: \"Constants\",\n                subtitle: \"\",\n                headerStyle: 'bg-info text-white',\n                content:\n                `\n                <p>ToDo</p>\n                 `\n                },\n                {\n                title: \"Storyboard\",\n                subtitle: \"\",\n                headerStyle: 'bg-info text-white',\n                content:\n                `\n                <p>ToDo</p>\n                 `\n                },\n                {\n                title: \"ViewController\",\n                subtitle: \"\",\n                headerStyle: 'bg-info text-white',\n                content:\n                `\n                <p>ToDo</p>\n                 `\n                },\n                {\n                title: \"Storyboard\",\n                subtitle: \"\",\n                headerStyle: 'bg-info text-white',\n                content:\n                `\n                <p>ToDo</p>\n                 `\n                },\n                \n        \n              ]\n            },\n          \n  ]\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IOSComponent } from './ios.component';\nimport { NavigationComponent } from './Childcomponents/navigation/navigation.component';\nimport { GettingStartedComponent } from './Childcomponents/getting-started/getting-started.component';\nimport { SingleAppComponent } from './Childcomponents/single-app/single-app.component';\n\n\nconst routes: Routes = [\n    {path: 'navigation', component: NavigationComponent},\n    {path: 'getting-started', component: GettingStartedComponent},\n    {path: 'single-app', component: SingleAppComponent},\n  ];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class IOSRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0RvY3VtZW50YXRpb24vSU9TL2lvcy9pb3MuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ios',\n  templateUrl: './ios.component.html',\n  styleUrls: ['./ios.component.css']\n})\nexport class IOSComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IOSRoutingModule } from './ios-routing.module';\nimport { IOSComponent } from '../ios/ios.component';\nimport { NavigationComponent } from './Childcomponents/navigation/navigation.component';\nimport { GettingStartedComponent } from './Childcomponents/getting-started/getting-started.component';\nimport { MatCardModule, MatTabsModule, MatListModule } from '@angular/material';\nimport { TabGroupComponent } from '../../shared/tab-group/tab-group.component';\nimport { TabGroupModule } from '../../shared/tab-group/tab-group.module';\nimport { SingleAppComponent } from './Childcomponents/single-app/single-app.component';\nimport { DocsCardModule } from '../../shared/docs-card/docs-card.module';\n\n\n@NgModule({\n  declarations: [\n    IOSComponent, \n    NavigationComponent, \n    GettingStartedComponent,\n    SingleAppComponent\n  ],\n  imports: [\n    CommonModule,\n    IOSRoutingModule,\n    MatCardModule,\n    MatTabsModule,\n    MatListModule,\n    TabGroupModule,\n    DocsCardModule\n  ],\n  providers: []\n})\nexport class IOSModule { }\n"],"sourceRoot":""}